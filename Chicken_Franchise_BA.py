# -*- coding: utf-8 -*-
"""201844004_김건우_프로젝트 과제.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FpO1Jp-6qDVZZP1uBZIaMG28Danhgbp1

**3-A 201844004 김건우**

# **2023 빅데이터처리 프로젝트 과제 주제: 서울 내 치킨 프랜차이즈의 상권 시각화**

- 공공데이터포털의 소상공인시장진흥공단_상가(상권)정보 데이터 중 서울시의 데이터를 사용한다.
- 서울 내의 전체 상가정보 중 표준산업분류명이 치킨 전문점인 데이터만 추출한다.
- 그 중 필요한 정보인 상호명, 지점명, 시도명, 시군구명, 위도, 경도만을 추출하여 데이터셋을 구성한다.
"""

import pandas as pd
from pandas import DataFrame
import folium
import json

df_all = pd.read_csv('/content/소상공인시장진흥공단_상가(상권)정보_서울_202309.csv', encoding='utf8')
df = df_all[(df_all['표준산업분류명'] == '치킨 전문점')]
chicken_dataset = df[['상호명', '시도명', '시군구명', '위도', '경도']]

s_geo='https://raw.githubusercontent.com/southkorea/seoul-maps/master/kostat/2013/json/seoul_municipalities_geo_simple.json'

chicken_dataset.head()

"""**서울 내의 치킨 전문점 점포 수 확인 및 치킨 프랜차이즈(BHC, 교촌치킨, BBQ, 굽네치킨) 점포 수 확인**
- 데이터셋의 전체 길이를 보여줘 서울 내의 치킨 전문점 점포 수를 확인한다.
- 데이터셋의 상호명에 프랜차이즈명을 포함하고 있는 데이터들만을 가져와 서울 내의 해당 프랜차이즈 점포 수를 확인한다.
- 치킨 프랜차이즈는 BHC, 교촌치킨, BBQ, 굽네치킨 4개로 진행한다. (매출 상위 4개의 치킨 프랜차이즈)
"""

print('서울시 내 치킨 전문점 수: ', len(chicken_dataset))

chicken_dataset_bhce = chicken_dataset[chicken_dataset['상호명'].str.contains('bhc')]
chicken_dataset_bhck = chicken_dataset[chicken_dataset['상호명'].str.contains('비에이치씨')]
chicken_dataset_BHC = pd.concat([chicken_dataset_bhce, chicken_dataset_bhck])

chicken_dataset_KyoChon = chicken_dataset[chicken_dataset['상호명'].str.contains('교촌치킨')]

chicken_dataset_bbqe = chicken_dataset[chicken_dataset['상호명'].str.contains('BBQ')]
chicken_dataset_bbqk = chicken_dataset[chicken_dataset['상호명'].str.contains('비비큐')]
chicken_dataset_BBQ = pd.concat([chicken_dataset_bbqe, chicken_dataset_bbqk])

chicken_dataset_GoobNe = chicken_dataset[chicken_dataset['상호명'].str.contains('굽네')]


print('서울시 내 BHC 수: ', len(chicken_dataset_BHC))
print('서울시 내 교촌치킨 수: ', len(chicken_dataset_KyoChon))
print('서울시 내 BBQ 전문점 수: ', len(chicken_dataset_BBQ))
print('서울시 내 굽네치킨 수: ', len(chicken_dataset_GoobNe))

"""**서울 시 내의 구별 치킨 전문점 점포 수 확인**"""

chicken_GuName = chicken_dataset.groupby('시군구명')['상호명'].count().to_frame().sort_values(by='시군구명', ascending=True)
chicken_GuName = chicken_GuName.reset_index()
chicken_GuName = chicken_GuName.set_index('시군구명')
chicken_GuName.columns = ['치킨 전문점']

chicken_GuName

"""**서울 내의 구별 치킨 프랜차이즈(BHC, 교촌치킨, BBQ, 굽네치킨) 점포 수 확인**"""

chicken_BHC = chicken_dataset_BHC.groupby('시군구명')['상호명'].count().to_frame().sort_values(by='시군구명', ascending=True)
chicken_BHC = chicken_BHC.reset_index()
chicken_BHC = chicken_BHC.set_index('시군구명')

chicken_KyoChon = chicken_dataset_KyoChon.groupby('시군구명')['상호명'].count().to_frame().sort_values(by='시군구명', ascending=True)
chicken_KyoChon = chicken_KyoChon.reset_index()
chicken_KyoChon = chicken_KyoChon.set_index('시군구명')

chicken_BBQ = chicken_dataset_BBQ.groupby('시군구명')['상호명'].count().to_frame().sort_values(by='시군구명', ascending=True)
chicken_BBQ = chicken_BBQ.reset_index()
chicken_BBQ = chicken_BBQ.set_index('시군구명')

chicken_GoobNe = chicken_dataset_GoobNe.groupby('시군구명')['상호명'].count().to_frame().sort_values(by='시군구명', ascending=True)
chicken_GoobNe = chicken_GoobNe.reset_index()
chicken_GoobNe = chicken_GoobNe.set_index('시군구명')

chicken_Four = pd.concat([chicken_BHC, chicken_KyoChon, chicken_BBQ, chicken_GoobNe], axis = 1)
chicken_Four.columns = ['BHC', '교촌치킨', 'BBQ', '굽네치킨']

chicken_Four

"""**서울 내의 치킨 전문점 점포수 시각화**"""

chicken_map = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

folium.Choropleth(geo_data = s_geo,
    data = chicken_GuName,
    columns = [chicken_GuName.index, '치킨 전문점'],
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.3,
    threshold_scale=[50, 100, 150, 200, 250, 300, 350],
    legend_name='치킨 전문점 수',
    key_on='feature.properties.name').add_to(chicken_map)

for name, lat, lng in zip(chicken_dataset['상호명'], chicken_dataset['위도'], chicken_dataset['경도']):
    folium.Marker([lat, lng], popup=name, icon=folium.Icon(color='blue')).add_to(chicken_map)

chicken_map

"""**서울 내의 BHC치킨 점포수 및 분포 시각화**"""

chicken_map_BHC = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

folium.Choropleth(geo_data=s_geo,
    data = chicken_BHC,
    columns = [chicken_BHC.index,'상호명'],
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.3,
    threshold_scale=[1, 5, 10, 15, 20, 25],
    legend_name='BHC 점포수',
    key_on='feature.properties.name').add_to(chicken_map_BHC)

for name, lat, lng in zip(chicken_dataset_BHC['상호명'], chicken_dataset_BHC['위도'], chicken_dataset_BHC['경도']):
    folium.Marker([lat, lng], popup=name, icon=folium.Icon(color='red')).add_to(chicken_map_BHC)

chicken_map_BHC

"""**서울 내의 교촌치킨 점포수 및 분포 시각화**"""

chicken_map_KyoChon = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

folium.Choropleth(geo_data=s_geo,
    data = chicken_KyoChon,
    columns = [chicken_KyoChon.index,'상호명'],
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.3,
    threshold_scale=[1, 5, 10, 15, 20, 25],
    legend_name='교촌치킨 점포수',
    key_on='feature.properties.name'
).add_to(chicken_map_KyoChon)

for name, lat, lng in zip(chicken_dataset_KyoChon['상호명'], chicken_dataset_KyoChon['위도'], chicken_dataset_KyoChon['경도']):
    folium.Marker([lat, lng], popup=name, icon=folium.Icon(color='green')).add_to(chicken_map_KyoChon)

chicken_map_KyoChon

"""**서울 내의 BBQ치킨 점포수 및 분포 시각화**"""

chicken_map_BBQ = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

folium.Choropleth(geo_data=s_geo, # 지도 경계
    data = chicken_BBQ,
    columns = [chicken_BBQ.index,'상호명'],
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.3,
    threshold_scale=[1, 5, 10, 15, 20, 25],
    legend_name='BBQ 점포수',
    key_on='feature.properties.name'
).add_to(chicken_map_BBQ)

for name, lat, lng in zip(chicken_dataset_BBQ['상호명'], chicken_dataset_BBQ['위도'], chicken_dataset_BBQ['경도']):
    folium.Marker([lat, lng], popup=name, icon=folium.Icon(color='blue')).add_to(chicken_map_BBQ)

chicken_map_BBQ

"""**서울 내의 굽네치킨 점포수 및 분포 시각화**"""

chicken_map_GoobNe = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

folium.Choropleth(geo_data=s_geo,
    data = chicken_GoobNe,
    columns = [chicken_GoobNe.index,'상호명'],
    fill_color='YlOrRd',
    fill_opacity=0.7,
    line_opacity=0.3,
    threshold_scale=[1, 5, 10, 15, 20, 25],
    legend_name='굽네치킨 점포수',
    key_on='feature.properties.name'
).add_to(chicken_map_GoobNe)

for name, lat, lng in zip(chicken_dataset_GoobNe['상호명'], chicken_dataset_GoobNe['위도'], chicken_dataset_GoobNe['경도']):
    folium.Marker([lat, lng], popup=name, icon=folium.Icon(color='red')).add_to(chicken_map_GoobNe)

chicken_map_GoobNe

"""**서울 내의 치킨 전문점 상권 시각화**"""

chicken_map_cd = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

for name, lat, lng in zip(chicken_dataset['상호명'], chicken_dataset['위도'], chicken_dataset['경도']):
    folium.Circle([lat, lng],
        radius=200,
        color='red',
        fill=True,
        fill_color='coral',
        fill_opacity=0.7,
        popup=name
    ).add_to(chicken_map_cd)
chicken_map_cd

"""**서울 내 치킨 프랜차이즈(BHC, 교촌치킨, BBQ, 굽네치킨) 상권 시각화**"""

chicken_franchise_map_cd = folium.Map(location=[37.5360, 126.9675], zoom_start=12)

for name, lat, lng in zip(chicken_dataset_BHC['상호명'], chicken_dataset_BHC['위도'], chicken_dataset_BHC['경도']):
    folium.Circle([lat, lng],
        radius=200,
        color='red',
        fill_color='red',
        popup=name).add_to(chicken_franchise_map_cd)

for name, lat, lng in zip(chicken_dataset_KyoChon['상호명'], chicken_dataset_KyoChon['위도'], chicken_dataset_KyoChon['경도']):
    folium.Circle([lat, lng],
        radius=200,
        color='yellow',
        fill_color='yellow',
        popup=name).add_to(chicken_franchise_map_cd)

for name, lat, lng in zip(chicken_dataset_BBQ['상호명'], chicken_dataset_BBQ['위도'], chicken_dataset_BBQ['경도']):
    folium.Circle([lat, lng],
        radius=200,
        color='green',
        fill_color='green',
        popup=name).add_to(chicken_franchise_map_cd)

for name, lat, lng in zip(chicken_dataset_GoobNe['상호명'], chicken_dataset_GoobNe['위도'], chicken_dataset_GoobNe['경도']):
    folium.Circle([lat, lng],
        radius=200,
        color='blue',
        fill_color='blue',
        popup=name).add_to(chicken_franchise_map_cd)

chicken_franchise_map_cd